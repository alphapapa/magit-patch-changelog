(require 'cl-lib)
(require 'ert)
(require 'magit)
(load-file "magit-patch-changelog.el")

(defsubst line-matches (control)
  (string= (buffer-substring (line-beginning-position) (line-end-position))
           control))

(ert-deftest agg-limit ()
  (with-temp-buffer
    (let ((header "* this is a header "))
      (put-text-property 0 (length header) 'magit-patch-changelog-header t header)
      (insert header))
    (dolist (func '("foo-foo-bar" "baz-bar-baz" "foo-baz-foo"))
      (put-text-property 0 (length func)
                         'magit-patch-changelog-loc
                         (cons (current-buffer)
                               (cl-loop with sum = 0
                                        for i from 0 below (length func)
                                        do (setq sum (+ sum (aref func i)))
                                        finally return sum))
                         func)
      (insert func "\n")
      (backward-char)
      (magit-patch-changelog--fixline)
      (end-of-line)
      (insert "this is a comment")
      (forward-line 1))
    (re-search-backward "foo-foo-bar")
    (magit-patch-changelog-agg-up)
    (should (line-matches "* this is a header (foo-foo-bar): this is a comment"))
    (should (eq (line-beginning-position) (point-min)))
    (re-search-forward "foo-baz-foo")
    (backward-char)
    (magit-patch-changelog-agg-down)
    (message (buffer-string))
    (should (line-matches "(foo-baz-foo): this is a comment"))
    (should (eq (line-end-position) (1- (point-max))))

))
